<?xml version="1.0" encoding="UTF-8"?>
<sqlset>
	<name>COMPETENCY_ACCESSMENT</name>
	<version>2.0</version>
	<description>Queries for COMPETENCY_ACCESSMENT COMPONENTS</description>
	
	<sql-query name="SELECT_CODESET_BY_ID" description="SELECT_CODESET_BY_ID"><![CDATA[
	SELECT 
		CODESET_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		PARENT_CODESET_ID,
		NAME,
		GROUP_CODE,
		CODE,
		DESCRIPTION,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_CODESET
	WHERE CODESET_ID = ?
	]]></sql-query>	
		
	<sql-query name="INSERT_CODESET" description="INSERT_CODESET"><![CDATA[
	INSERT INTO CA_CODESET (
		CODESET_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		PARENT_CODESET_ID,
		NAME,
		GROUP_CODE,
		CODE,		
		DESCRIPTION,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)		
	]]></sql-query>			

	<sql-query name="UPDATE_CODESET" description="UPDATE_CODESET"><![CDATA[
	UPDATE CA_CODESET 
	SET
		PARENT_CODESET_ID = ?,
		NAME = ?,
		GROUP_CODE = ?,
		CODE = ?,
		DESCRIPTION = ?,
		MODIFIED_DATE = ? 
	WHERE 
		CODESET_ID = ?	
	]]></sql-query>		
		
	<sql-query name="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		COUNT(CODESET_ID) 
	FROM CA_CODESET 
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?		
	]]></sql-query>			


	<sql-query name="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		CODESET_ID 	
	FROM CA_CODESET 
	WHERE 
		OBJECT_TYPE = ? AND 
		OBJECT_ID = ? 
	ORDER BY 
		CREATION_DATE, 
		CODESET_ID ASC	
	]]></sql-query>	
	
	<sql-query name="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CODESET_ID" description="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CODESET_ID"><![CDATA[
	SELECT 
		COUNT(CODESET_ID) 
	FROM CA_CODESET 
	WHERE OBJECT_TYPE = ? AND 
		OBJECT_ID = ? AND 
		CODESET_ID =? AND 
		PARENT_CODESET_ID = ?	
	]]></sql-query>			


	<sql-query name="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CODESET_ID" description="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CODESET_ID"><![CDATA[
	SELECT CODESET_ID FROM CA_CODESET 
	WHERE 
		OBJECT_TYPE = ? AND 
		OBJECT_ID = ? AND 
		PARENT_CODESET_ID = ?	
	ORDER BY 
		CREATION_DATE, 
		NAME ASC	
	]]></sql-query>	
				
				
	<sql-query name="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_GROUP_CODE" description="COUNT_CODESET_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_GROUP_CODE"><![CDATA[
	SELECT 
		COUNT(CODESET_ID) 	
	FROM CA_CODESET 
	WHERE OBJECT_TYPE = ? AND 
		OBJECT_ID = ? AND 
		CODESET_ID =? AND 
		GROUP_CODE = ?	
	]]></sql-query>			


	<sql-query name="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_GROUP_CODE" description="SELECT_CODESET_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_GROUP_CODE"><![CDATA[
	SELECT 
		CODESET_ID 	
	FROM CA_CODESET 
	WHERE 
		OBJECT_TYPE = ? AND 
		OBJECT_ID = ? AND 
		GROUP_CODE = ?	
	ORDER BY 
		CREATION_DATE, 
		NAME ASC	
	]]></sql-query>					
				
				
	<sql-query name="SELECT_ROOT_CODESET" description="SELECT_ROOT_CODESET"><![CDATA[
	SELECT 
		CODESET_ID, CREATION_DATE 	
	FROM CA_CODESET 
	WHERE 
		OBJECT_TYPE = ? AND 
		OBJECT_ID = ?	AND 
		PARENT_CODESET_ID IS NULL
	ORDER BY CREATION_DATE ASC
	]]></sql-query>			
	
	<sql-query name="SELECT_CHILD_CODESET" description="SELECT_CHILD_CODESET"><![CDATA[
	SELECT 
		CODESET_ID, 
		PARENT_COMMENT_ID 
	FROM CA_CODESET 
	WHERE 
		OBJECT_TYPE = ? AND 
		OBJECT_ID = ?	AND 
		PARENT_CODESET_ID IS NOT NULL 
	ORDER BY 
		CREATION_DATE, 
		CODESET_ID ASC	
	]]></sql-query>		






	<sql-query name="CREATE_COMPETENCY" description="CREATE_COMPETENCY"><![CDATA[
	INSERT INTO CA_COMPETENCY (
		COMPETENCY_ID,
		COMPETENCY_TYPE,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		COMPETENCY_LEVEL,
		COMPETENCY_UNIT_CODE,
		COMPETENCY_GROUP_CODE	
	) VALUES (?,?,?,?,?,?, ?,?,?)	
	]]></sql-query>	
	
	<sql-query name="UPDATE_COMPETENCY" description="UPDATE_COMPETENCY"><![CDATA[
	UPDATE CA_COMPETENCY SET 
	NAME = ? ,
	DESCRIPTION = ?,
	COMPETENCY_LEVEL = ?,
	COMPETENCY_UNIT_CODE = ?,
	COMPETENCY_GROUP_CODE = ?
	WHERE COMPETENCY_ID = ?
	]]></sql-query>		
	
	<sql-query name="SELECT_COMPETENCY_BY_ID" description="SELECT_COMPETENCY_BY_ID"><![CDATA[
	SELECT 
		COMPETENCY_ID,
		COMPETENCY_TYPE,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		COMPETENCY_LEVEL,
		COMPETENCY_UNIT_CODE,
		COMPETENCY_GROUP_CODE		
	FROM CA_COMPETENCY
	WHERE COMPETENCY_ID = ?	
	]]></sql-query>	
	
	<sql-query name="SELECT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_NAME" description="SELECT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_NAME"><![CDATA[
	SELECT 
		COMPETENCY_ID,
		COMPETENCY_TYPE,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		COMPETENCY_LEVEL,
		COMPETENCY_UNIT_CODE,
		COMPETENCY_GROUP_CODE		
	FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	AND NAME = ?
	]]></sql-query>	
	
	<sql-query name="SELECT_COMPETENCY_ID_WITH_COMPETENCY_UNIT_CODE" description="SELECT_COMPETENCY_ID_WITH_COMPETENCY_UNIT_CODE"><![CDATA[
	SELECT 
		COMPETENCY_ID,
		COMPETENCY_UNIT_CODE	
	FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	AND COMPETENCY_UNIT_CODE is not null
	]]></sql-query>		
	<sql-query name="DELETE_COMPETENCY" description="DELETE_COMPETENCY"><![CDATA[
	DELETE CA_COMPETENCY WHERE COMPETENCY_ID = ?	
	]]></sql-query>	
	
	<sql-query name="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(COMPETENCY_ID) FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	]]></sql-query>		
	
	<sql-query name="SELECT_COMPETENCY_ID_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_COMPETENCY_ID_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COMPETENCY_ID FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?	
	ORDER BY NAME ASC
	]]></sql-query>	
	
	<sql-query name="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_TYPE" description="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_TYPE"><![CDATA[
	SELECT COUNT(COMPETENCY_ID) FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	AND COMPETENCY_TYPE = ?
	]]></sql-query>		
	
	<sql-query name="SELECT_COMPETENCY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_TYPE" description="SELECT_COMPETENCY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_TYPE"><![CDATA[
	SELECT COMPETENCY_ID FROM CA_COMPETENCY
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?	
	AND COMPETENCY_TYPE = ?
	ORDER BY NAME ASC
	]]></sql-query>		
	
	
	<sql-query name="FIND_COMPETENCY_IDS_BY_INPUT" description="FIND_COMPETENCY_IDS_BY_INPUT"><![CDATA[
    SELECT
        T1.COMPETENCY_ID
    FROM
        CA_COMPETENCY T1,
        CA_JOB T2,
        CA_JOB_COMPETENCY_REL T3
    WHERE
    	T1.OBJECT_TYPE = ? AND
    	T1.OBJECT_ID = ? AND
        T1.COMPETENCY_ID = T3.COMPETENCY_ID (+) AND
        T3.JOB_ID = T2.JOB_ID(+)
	]]><dynamic><![CDATA[	
	<#if groupCode??>
	AND T1.COMPETENCY_GROUP_CODE = '${groupCode}'
	</#if>		
	<#if (level > 0) >
	AND T1.COMPETENCY_LEVEL = ${level}
	</#if>	
	<#if name?? >
	AND T1.NAME LIKE '%${name}%'
	</#if>			
	<#if (majorityId > 0) >
	AND T2.L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND T2.M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND T2.S_CLASSIFIED_ID = ${minorityId}
	</#if>	
	<#if (jobId > 0) >
	AND T2.JOB_ID = ${jobId}
	</#if>			
	]]></dynamic><![CDATA[
	ORDER BY T1.NAME ASC
	]]></sql-query>	
		
	<sql-query name="COUNT_COMPETENCY_IDS_BY_INPUT" description="COUNT_COMPETENCY_IDS_BY_INPUT"><![CDATA[
    SELECT
        COUNT(T1.COMPETENCY_ID)
    FROM
        CA_COMPETENCY T1,
        CA_JOB T2,
        CA_JOB_COMPETENCY_REL T3
    WHERE
    	T1.OBJECT_TYPE = ? AND
    	T1.OBJECT_ID = ? AND
        T1.COMPETENCY_ID = T3.COMPETENCY_ID (+) AND
        T3.JOB_ID = T2.JOB_ID(+)
	]]><dynamic><![CDATA[	
	<#if groupCode??>
	AND T1.COMPETENCY_GROUP_CODE = '${groupCode}'
	</#if>		
	<#if name?? >
	AND T1.NAME LIKE '%${name}%'
	</#if>			
	<#if (majorityId > 0) >
	AND T2.L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND T2.M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND T2.S_CLASSIFIED_ID = ${minorityId}
	</#if>	
	<#if (jobId > 0) >
	AND T2.JOB_ID = ${jobId}
	</#if>			
	]]></dynamic><![CDATA[
	ORDER BY T1.NAME ASC
	]]></sql-query>				
	
	<sql-query name="SELECT_ESSENTIAL_ELEMENT_IDS_BY_COMPETENCY_ID" description="SELECT_ESSENTIAL_ELEMENT_IDS_BY_COMPETENCY_ID"><![CDATA[
	SELECT ESSENTIAL_ELEMENT_ID FROM CA_ESSENTIAL_ELEMENT
	WHERE COMPETENCY_ID = ?
	ORDER BY NAME ASC
	]]></sql-query>		

	<sql-query name="SELECT_ESSENTIAL_ELEMENT_BY_ID" description="SELECT_ESSENTIAL_ELEMENT_BY_ID"><![CDATA[
	SELECT 
		COMPETENCY_ID,
		ESSENTIAL_ELEMENT_ID,
		NAME,
		DESCRIPTION,
		COMPETENCY_LEVEL	
	FROM CA_ESSENTIAL_ELEMENT
	WHERE ESSENTIAL_ELEMENT_ID = ?
	]]></sql-query>		
	
	<sql-query name="UPDATE_ESSENTIAL_ELEMENT" description="UPDATE_ESSENTIAL_ELEMENT"><![CDATA[
	UPDATE CA_ESSENTIAL_ELEMENT
	SET NAME = ? ,
		DESCRIPTION = ? ,
		COMPETENCY_LEVEL = ?			
	WHERE ESSENTIAL_ELEMENT_ID = ?
	]]></sql-query>		
	
	<sql-query name="CREATE_ESSENTIAL_ELEMENT" description="CREATE_ESSENTIAL_ELEMENT"><![CDATA[
	INSERT INTO CA_ESSENTIAL_ELEMENT (
		COMPETENCY_ID,
		ESSENTIAL_ELEMENT_ID,
		NAME,
		DESCRIPTION,
		COMPETENCY_LEVEL	
	) VALUES (?,?,?,?,?)	
	]]></sql-query>		
	
	<sql-query name="COUNT_ESSENTIAL_ELEMENT_BY_COMPETENCY_ID" description="COUNT_ESSENTIAL_ELEMENT_BY_COMPETENCY_ID"><![CDATA[
	SELECT COUNT(ESSENTIAL_ELEMENT_ID) FROM CA_ESSENTIAL_ELEMENT
	WHERE COMPETENCY_ID = ?
	]]></sql-query>							
					
	<!--  CA_JOB -->				
	<sql-query name="INSERT_JOB" description="INSERT_JOB"><![CDATA[
	INSERT INTO CA_JOB (
		JOB_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		CLASSIFY_TYPE,
		L_CLASSIFIED_ID,
		M_CLASSIFIED_ID,
		S_CLASSIFIED_ID,
		NAME,
		DESCRIPTION,
		CREATION_DATE,
 		MODIFIED_DATE		
	) VALUES (
		?,?,?,?,?,
		?,?,?,?,?,?
	)
	]]></sql-query>				
				
	<sql-query name="SELECT_JOB_ID_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_JOB_ID_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT JOB_ID FROM CA_JOB
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?	
	ORDER BY NAME ASC
	]]></sql-query>	
	<sql-query name="COUNT_JOB_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_JOB_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(JOB_ID) FROM CA_JOB WHERE 
	OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	]]></sql-query>	
	
	<sql-query name="SELECT_JOB_ID_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY" description="SELECT_JOB_ID_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY"><![CDATA[
	SELECT JOB_ID FROM CA_JOB
	WHERE OBJECT_TYPE = ? 
	AND OBJECT_ID = ?	
	]]><dynamic><![CDATA[
	<#if (classifyType > 0) >
	AND CLASSIFY_TYPE = ${classifyType}
	</#if>	
	<#if (majorityId > 0) >
	AND L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND S_CLASSIFIED_ID = ${minorityId}
	</#if>			
	]]></dynamic><![CDATA[
	ORDER BY NAME ASC
	]]></sql-query>	
	
	<sql-query name="COUNT_JOB_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY" description="COUNT_JOB_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY"><![CDATA[
	SELECT COUNT(JOB_ID) FROM CA_JOB WHERE 
	OBJECT_TYPE = ? 
	AND OBJECT_ID = ?
	]]><dynamic><![CDATA[
	<#if (classifyType > 0) >
	AND CLASSIFY_TYPE = ${classifyType}
	</#if>	
	<#if (majorityId > 0) >
	AND L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND S_CLASSIFIED_ID = ${minorityId}
	</#if>				
	]]></dynamic><![CDATA[
	ORDER BY NAME ASC
	]]></sql-query>		
	
	<sql-query name="SELECT_JOB_BY_ID" description="SELECT_JOB_BY_ID"><![CDATA[
	SELECT 
		JOB_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		CLASSIFY_TYPE,
		L_CLASSIFIED_ID,
		M_CLASSIFIED_ID,
		S_CLASSIFIED_ID,
		NAME,
		DESCRIPTION,
		CREATION_DATE,
 		MODIFIED_DATE	
 	FROM CA_JOB
 	WHERE JOB_ID = ?	
 	ORDER BY L_CLASSIFIED_ID DESC, M_CLASSIFIED_ID ASC, S_CLASSIFIED_ID ASC
	]]></sql-query>	
	
	<sql-query name="UPDATE_JOB" description="UPDATE_JOB"><![CDATA[
	UPDATE CA_JOB SET
		CLASSIFY_TYPE = ?,
		L_CLASSIFIED_ID = ?,
		M_CLASSIFIED_ID = ?,
		S_CLASSIFIED_ID = ?,
		NAME = ?,
		DESCRIPTION = ?,	
		MODIFIED_DATE = ?
	WHERE JOB_ID =?	
	]]></sql-query>	
	
	
	<sql-query name="INSERT_JOB_COMPETENCY_RELATIONSHIP" description="INSERT_JOB_COMPETENCY_RELATIONSHIP"><![CDATA[
	INSERT INTO CA_JOB_COMPETENCY_REL (
		OBJECT_TYPE,
		OBJECT_ID,
		JOB_ID,
		COMPETENCY_ID
	) VALUES (?,?,?,?)	
	]]></sql-query>								
									
	<sql-query name="SELECT_COMPETENCY_ID_BY_JOB_ID" description="SELECT_COMPETENCY_ID_BY_JOB_ID"><![CDATA[
	SELECT COMPETENCY_ID FROM CA_JOB_COMPETENCY_REL
	WHERE
		JOB_ID = ?
	ORDER BY COMPETENCY_ID ASC
	]]></sql-query>					
	
	<sql-query name="COUNT_COMPETENCY_BY_JOB_ID" description="COUNT_COMPETENCY_BY_JOB_ID"><![CDATA[
	SELECT 
		COUNT(COMPETENCY_ID)
	FROM 
		CA_JOB_COMPETENCY_REL					
	WHERE 
		JOB_ID = ?
	]]></sql-query>	

	<sql-query name="SELECT_COMPETENCY_IDS_BY_JOB_ID" description="SELECT_COMPETENCY_IDS_BY_JOB_ID"><![CDATA[
	SELECT 
		COMPETENCY_ID
	FROM 
		CA_JOB_COMPETENCY_REL					
	WHERE 
		JOB_ID = ?
	]]></sql-query>
	
	<sql-query name="SELECT_JOB_ID_BY_COMPETENCY_ID" description="SELECT_JOB_ID_BY_COMPETENCY_ID"><![CDATA[
	SELECT 
		JOB_ID
	FROM 
		CA_JOB_COMPETENCY_REL					
	WHERE 
		COMPETENCY_ID = ?
	]]></sql-query>

	<sql-query name="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY" description="COUNT_COMPETENCY_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY"><![CDATA[
	SELECT 
		COUNT(T2.COMPETENCY_ID)
	FROM 
		CA_JOB T1, 
		CA_JOB_COMPETENCY_REL T2 						
	WHERE 
		T1.OBJECT_TYPE = ?
		AND T1.OBJECT_ID = ?			
	]]><dynamic><![CDATA[
	<#if (classifyType > 0) >
	AND CLASSIFY_TYPE = ${classifyType}
	</#if>	
	<#if (majorityId > 0) >
	AND L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND S_CLASSIFIED_ID = ${minorityId}
	</#if>				
	]]></dynamic><![CDATA[
	AND T1.JOB_ID = T2.JOB_ID 
	]]></sql-query>	
	
	<sql-query name="SELECT_COMPETENCY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY" description="SELECT_COMPETENCY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID_AND_CLASSIFY"><![CDATA[
	SELECT 
		T2.COMPETENCY_ID 
	FROM 
		CA_JOB T1, 
		CA_JOB_COMPETENCY_REL T2 						
	WHERE 
		T1.OBJECT_TYPE = ?
		AND T1.OBJECT_ID = ?			
	]]><dynamic><![CDATA[
	<#if (classifyType > 0) >
	AND CLASSIFY_TYPE = ${classifyType}
	</#if>		
	<#if (majorityId > 0) >
	AND L_CLASSIFIED_ID = ${majorityId}
	</#if>		
	<#if (middleId > 0) >
	AND M_CLASSIFIED_ID = ${middleId}
	</#if>		
	<#if (minorityId > 0) >
	AND S_CLASSIFIED_ID = ${minorityId}
	</#if>				
	]]></dynamic><![CDATA[
	AND T1.JOB_ID = T2.JOB_ID 
	]]></sql-query>	
	
	
	<sql-query name="SELECT_JOB_LEVEL_BY_ID" description="SELECT_JOB_LEVEL_BY_ID"><![CDATA[
	SELECT 
		JOB_LEVEL_ID,
		JOB_ID,
		NAME,
		DESCRIPTION,
		MIN_YEAR,
		MAX_YEAR,
		JOB_LEVEL	
	FROM CA_JOB_LEVEL	
	WHERE
		JOB_LEVEL_ID = ?
	]]></sql-query>	
	
	<sql-query name="SELECT_JOB_LEVEL_IDS_BY_JOB_ID" description="SELECT_JOB_LEVEL_IDS_BY_JOB_ID"><![CDATA[
	SELECT 
		JOB_LEVEL_ID	
	FROM CA_JOB_LEVEL	
	WHERE
		JOB_ID = ?
	ORDER BY JOB_LEVEL DESC		
	]]></sql-query>	

	<sql-query name="REMOVE_JOB_LEVEL" description="REMOVE_JOB_LEVEL"><![CDATA[
	DELETE CA_JOB_LEVEL
	WHERE JOB_LEVEL_ID = ?
	]]></sql-query>	

	<sql-query name="UPDATE_JOB_LEVEL" description="UPDATE_JOB_LEVEL"><![CDATA[
	UPDATE CA_JOB_LEVEL SET
		NAME = ?,
		DESCRIPTION = ?,
		MIN_YEAR = ?,
		MAX_YEAR = ?,	
		JOB_LEVEL = ?
	WHERE JOB_LEVEL_ID =?		
	]]></sql-query>				

	<sql-query name="INSERT_JOB_LEVEL" description="INSERT_JOB_LEVEL"><![CDATA[
	INSERT INTO CA_JOB_LEVEL (
		JOB_LEVEL_ID,
		JOB_ID,
		NAME,
		DESCRIPTION,
		MIN_YEAR,
		MAX_YEAR,
		JOB_LEVEL
	) VALUES (?,?,?,?,?,?,?)	
	
	]]></sql-query>			
	
	
	<sql-query name="CREATE_PERFORMANCE_CRITERIA" description="CREATE_PERFORMANCE_CRITERIA"><![CDATA[
	INSERT INTO CA_PERFORMANCE_CRITERIA (
		PERFORMANCE_CRITERIA_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		SORT_ORDER,
		DESCRIPTION,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?)		
	]]></sql-query>		
	
	<sql-query name="UPDATE_PERFORMANCE_CRITERIA" description="UPDATE_PERFORMANCE_CRITERIA"><![CDATA[
	UPDATE CA_PERFORMANCE_CRITERIA SET
		OBJECT_TYPE = ?,
		OBJECT_ID = ?,
		SORT_ORDER = ?,
		DESCRIPTION = ?,	
		MODIFIED_DATE = ?
	WHERE PERFORMANCE_CRITERIA_ID =?	
	]]></sql-query>								

	<sql-query name="SELECT_PERFORMANCE_CRITERIA_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_PERFORMANCE_CRITERIA_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		PERFORMANCE_CRITERIA_ID
	FROM CA_PERFORMANCE_CRITERIA
	WHERE
		OBJECT_TYPE = ? AND
		OBJECT_ID = ?
	ORDER BY SORT_ORDER ASC
	]]></sql-query>		
										
	<sql-query name="SELECT_PERFORMANCE_CRITERIAL_BY_ID" description="SELECT_PERFORMANCE_CRITERIAL_BY_ID"><![CDATA[
	SELECT 
		PERFORMANCE_CRITERIA_ID,
		OBJECT_TYPE,
		OBJECT_ID,	
		SORT_ORDER,
		DESCRIPTION,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_PERFORMANCE_CRITERIA
	WHERE
		PERFORMANCE_CRITERIA_ID = ?
	]]></sql-query>	
	<sql-query name="DELETE_PERFORMANCE_CRITERIA" description="DELETE_PERFORMANCE_CRITERIA"><![CDATA[
	DELETE FROM CA_PERFORMANCE_CRITERIA
	WHERE
		PERFORMANCE_CRITERIA_ID = ?
	]]></sql-query>	
	<sql-query name="DELETE_PERFORMANCE_CRITERIA_PROPERTY" description="DELETE_PERFORMANCE_CRITERIA_PROPERTY"><![CDATA[
	DELETE FROM CA_PERFORMANCE_CRITERIA_PROP
	WHERE
		PERFORMANCE_CRITERIA_ID = ?
	]]></sql-query>				



	<sql-query name="CREATE_ABILITY" description="CREATE_ABILITY"><![CDATA[
	INSERT INTO CA_ABILITY (
		ABILITY_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		ABILITY_TYPE,
		NAME,
		DESCRIPTION
	) VALUES (?,?,?,?,?,?)		
	]]></sql-query>		
	<sql-query name="UPDATE_ABILITY" description="UPDATE_ABILITY"><![CDATA[
	UPDATE CA_ABILITY SET
		ABILITY_TYPE = ?,
		NAME = ?,
		DESCRIPTION = ?
	WHERE ABILITY_ID =?		
	]]></sql-query>		
	<sql-query name="DELETE_ABILITY" description="DELETE_ABILITY"><![CDATA[
	DELETE FROM CA_ABILITY
	WHERE
		ABILITY_ID = ?	
	]]></sql-query>		
	<sql-query name="SELECT_ABILITY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_ABILITY_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		ABILITY_ID
	FROM CA_ABILITY
	WHERE
		OBJECT_TYPE = ?	AND
		OBJECT_ID = ?	
	]]></sql-query>		
	<sql-query name="SELECT_ABILITY_BY_ID" description="SELECT_ABILITY_BY_ID"><![CDATA[
	SELECT 
		ABILITY_ID,
		OBJECT_TYPE,
		OBJECT_ID,	
		ABILITY_TYPE,
		NAME,
		DESCRIPTION
	FROM CA_ABILITY
	WHERE
		ABILITY_ID = ?	
	]]></sql-query>						

	<sql-query name="SELECT_RATING_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_RATING_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT RATING_SCHEME_ID FROM CA_RATING_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?	
	]]></sql-query>	
	<sql-query name="COUNT_RATING_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_RATING_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(RATING_SCHEME_ID) FROM CA_RATING_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?		
	]]></sql-query>	
	
	<sql-query name="SELECT_RATING_SCHEME_BY_ID" description="SELECT_RATING_SCHEME_BY_ID"><![CDATA[
	SELECT 
		RATING_SCHEME_ID, 
		OBJECT_TYPE,
		OBJECT_ID,	
		NAME,
		DESCRIPTION,
		SCALE,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_RATING_SCHEME
	WHERE RATING_SCHEME_ID = ?
	]]></sql-query>	
		
	<sql-query name="SELECT_RATING_LEVEL_BY_RATING_SCHEME_ID" description="SELECT_RATING_LEVEL_BY_RATING_SCHEME_ID"><![CDATA[
	SELECT 
		RATING_SCHEME_ID, 
		RATING_LEVEL_ID,
		TITLE,	
		SCORE
	FROM CA_RATING_LEVEL
	WHERE RATING_SCHEME_ID = ?	
	ORDER BY SCORE ASC
	]]></sql-query>		
	
	<sql-query name="UPDATE_RATING_SCHEME" description="UPDATE_RATING_SCHEME"><![CDATA[
	UPDATE CA_RATING_SCHEME SET
		OBJECT_TYPE = ?,
		OBJECT_ID = ?,
		NAME = ?,
		DESCRIPTION = ? ,
		SCALE = ?,
		MODIFIED_DATE = ?
	WHERE RATING_SCHEME_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_RATING_SCHEME" description="INSERT_RATING_SCHEME"><![CDATA[
	INSERT INTO CA_RATING_SCHEME (
		RATING_SCHEME_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		SCALE,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?)		
	]]></sql-query>	
	<sql-query name="INSERT_RATING_LEVEL" description="INSERT_RATING_LEVEL"><![CDATA[
	INSERT INTO CA_RATING_LEVEL (
		RATING_SCHEME_ID,
		RATING_LEVEL_ID,
		TITLE,
		SCORE
	) VALUES (?,?,?,?)		
	]]></sql-query>	
	<sql-query name="UPDATE_RATING_LEVEL" description="UPDATE_RATING_LEVEL"><![CDATA[
	UPDATE CA_RATING_LEVEL SET
		TITLE = ?,
		SCORE = ?
	WHERE RATING_LEVEL_ID =?	
	]]></sql-query>	
	<sql-query name="SELECT_RATING_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_RATING_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT RATING_SCHEME_ID FROM CA_RATING_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?	
	]]></sql-query>	
	<sql-query name="COUNT_RATING_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_RATING_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(RATING_SCHEME_ID) FROM CA_RATING_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?		
	]]></sql-query>	
	
	<sql-query name="SELECT_RATING_SCHEME_BY_ID" description="SELECT_RATING_SCHEME_BY_ID"><![CDATA[
	SELECT 
		RATING_SCHEME_ID, 
		OBJECT_TYPE,
		OBJECT_ID,	
		NAME,
		DESCRIPTION,
		SCALE,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_RATING_SCHEME
	WHERE RATING_SCHEME_ID = ?
	]]></sql-query>	
		
	<sql-query name="SELECT_RATING_LEVEL_BY_RATING_SCHEME_ID" description="SELECT_RATING_LEVEL_BY_RATING_SCHEME_ID"><![CDATA[
	SELECT 
		RATING_SCHEME_ID, 
		RATING_LEVEL_ID,
		TITLE,	
		SCORE
	FROM CA_RATING_LEVEL
	WHERE RATING_SCHEME_ID = ?	
	ORDER BY SCORE ASC
	]]></sql-query>		
	
	<sql-query name="UPDATE_RATING_SCHEME" description="UPDATE_RATING_SCHEME"><![CDATA[
	UPDATE CA_RATING_SCHEME SET
		OBJECT_TYPE = ?,
		OBJECT_ID = ?,
		NAME = ?,
		DESCRIPTION = ? ,
		SCALE = ?,
		MODIFIED_DATE = ?
	WHERE RATING_SCHEME_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_RATING_SCHEME" description="INSERT_RATING_SCHEME"><![CDATA[
	INSERT INTO CA_RATING_SCHEME (
		RATING_SCHEME_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		SCALE,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?)		
	]]></sql-query>	
	
	
	<!-- ASSESSMENT SCHEME -->
	<sql-query name="SELECT_ASSESSMENT_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_ASSESSMENT_SCHEME_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT ASSESSMENT_SCHEME_ID FROM CA_ASSESSMENT_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?	
	]]></sql-query>	
	
	<sql-query name="COUNT_ASSESSMENT_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_ASSESSMENT_SCHEME_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(ASSESSMENT_SCHEME_ID) FROM CA_ASSESSMENT_SCHEME
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?		
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_SCHEME_BY_ID" description="SELECT_ASSESSMENT_SCHEME_BY_ID"><![CDATA[
	SELECT 
		ASSESSMENT_SCHEME_ID, 
		OBJECT_TYPE,
		OBJECT_ID,	
		NAME,
		DESCRIPTION,
		RATING_SCHEME_ID,
		MULTIPLE_APPLY_ALLOWED,
		FEEDBACK_ENABLED,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_ASSESSMENT_SCHEME
	WHERE ASSESSMENT_SCHEME_ID = ?
	]]></sql-query>	
	
	<sql-query name="UPDATE_ASSESSMENT_SCHEME" description="UPDATE_ASSESSMENT_SCHEME"><![CDATA[
	UPDATE CA_ASSESSMENT_SCHEME SET
		OBJECT_TYPE = ?,
		OBJECT_ID = ?,
		NAME = ?,
		DESCRIPTION = ? ,
		RATING_SCHEME_ID = ?,
		MULTIPLE_APPLY_ALLOWED = ?,
		FEEDBACK_ENABLED = ?,
		MODIFIED_DATE = ?
	WHERE ASSESSMENT_SCHEME_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_ASSESSMENT_SCHEME" description="INSERT_ASSESSMENT_SCHEME"><![CDATA[
	INSERT INTO CA_ASSESSMENT_SCHEME (
		ASSESSMENT_SCHEME_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		RATING_SCHEME_ID,
		MULTIPLE_APPLY_ALLOWED,
		FEEDBACK_ENABLED,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?,?,?)		
	]]></sql-query>	
	
	
	<!--  JOB SELECTION -->
	<sql-query name="SELECT_ASSESSMENT_JOB_SELECTION_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_ASSESSMENT_JOB_SELECTION_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		SELECTION_ID
	FROM CA_ASSESSMENT_JOB_SELECTION
	WHERE OBJECT_TYPE =? AND OBJECT_ID = ?	
	]]></sql-query>	
		
	<sql-query name="COUNT_ASSESSMENT_JOB_SELECTION_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_JOB_SELECTION_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		COUNT(SELECTION_ID)
	FROM CA_ASSESSMENT_JOB_SELECTION
	WHERE OBJECT_TYPE =? AND OBJECT_ID = ?	
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_JOB_SELECTION_BY_ID" description="SELECT_JOB_SELECTION_BY_ID"><![CDATA[
	SELECT 
		SELECTION_ID,
		SELECTION_TYPE,
		OBJECT_TYPE,
		OBJECT_ID,
		CLASSIFY_TYPE,
		L_CLASSIFIED_ID,
		M_CLASSIFIED_ID,
		S_CLASSIFIED_ID,
		JOB_ID
	FROM CA_ASSESSMENT_JOB_SELECTION
	WHERE SELECTION_ID =?	
	]]></sql-query>	
				
	<sql-query name="UPDATE_ASSESSMENT_JOB_SELECTION" description="UPDATE_JOB_SELECTION"><![CDATA[
	UPDATE CA_ASSESSMENT_JOB_SELECTION SET
		CLASSIFY_TYPE = ?,
		L_CLASSIFIED_ID = ?,
		M_CLASSIFIED_ID = ?,
		S_CLASSIFIED_ID = ?,
		JOB_ID = ?
	WHERE SELECTION_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_ASSESSMENT_JOB_SELECTION" description="INSERT_JOB_SELECTION"><![CDATA[
	INSERT INTO CA_ASSESSMENT_JOB_SELECTION (
		SELECTION_ID,
		SELECTION_TYPE,
		OBJECT_TYPE,
		OBJECT_ID,
		CLASSIFY_TYPE,
		L_CLASSIFIED_ID,
		M_CLASSIFIED_ID,
		S_CLASSIFIED_ID,
		JOB_ID
	) VALUES (?,0,?,?,?,?,?,?,?)		
	]]></sql-query>			

	<sql-query name="REMOVE_ASSESSMENT_JOB_SELECTION" description="REMOVE_JOB_SELECTION"><![CDATA[
	DELETE FROM CA_ASSESSMENT_JOB_SELECTION
	WHERE SELECTION_ID = ?
	]]></sql-query>				
			
	<!--  ASSESSMENT SUBJECT -->
	<sql-query name="SELECT_ASSESSMENT_SUBJECT_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_ASSESSMENT_SUBJECT_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		SUBJECT_ID
	FROM CA_ASSESSMENT_SUBJECT
	WHERE OBJECT_TYPE =? AND OBJECT_ID = ?	
	]]></sql-query>		
	<sql-query name="COUNT_ASSESSMENT_SUBJECT_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_ASSESSMENT_SUBJECT_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT 
		COUNT(SUBJECT_ID)
	FROM CA_ASSESSMENT_SUBJECT
	WHERE OBJECT_TYPE =? AND OBJECT_ID = ?	
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_SUBJECT_BY_ID" description="SELECT_ASSESSMENT_SUBJECT_BY_ID"><![CDATA[
	SELECT 
		SUBJECT_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		SUBJECT_OBJECT_TYPE,
		SUBJECT_OBJECT_ID
	FROM CA_ASSESSMENT_SUBJECT
	WHERE SUBJECT_ID =?	
	]]></sql-query>	
				
	<sql-query name="UPDATE_ASSESSMENT_SUBJECT" description="UPDATE_ASSESSMENT_SUBJECT"><![CDATA[
	UPDATE CA_ASSESSMENT_SUBJECT SET
		SUBJECT_OBJECT_TYPE = ?,
		SUBJECT_OBJECT_ID = ?
	WHERE SUBJECT_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_ASSESSMENT_SUBJECT" description="INSERT_ASSESSMENT_SUBJECT"><![CDATA[
	INSERT INTO CA_ASSESSMENT_SUBJECT (
		SUBJECT_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		SUBJECT_OBJECT_TYPE,
		SUBJECT_OBJECT_ID
	) VALUES (?,?,?,?,?)		
	]]></sql-query>			

	<sql-query name="REMOVE_ASSESSMENT_SUBJECT" description="REMOVE_ASSESSMENT_SUBJECT"><![CDATA[
	DELETE FROM CA_ASSESSMENT_SUBJECT
	WHERE SUBJECT_ID = ?
	]]></sql-query>									
	
	

	<!-- ASSESSMENT PLAN -->
	<sql-query name="SELECT_ASSESSMENT_PLAN_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID" description="SELECT_ASSESSMENT_PLAN_IDS_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT ASSESSMENT_ID FROM CA_ASSESSMENT_PLAN
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?	
	]]></sql-query>	
	
	<sql-query name="COUNT_ASSESSMENT_PLAN_BY_OBJECT_TYPE_AND_OBJECT_ID" description="COUNT_ASSESSMENT_PLAN_BY_OBJECT_TYPE_AND_OBJECT_ID"><![CDATA[
	SELECT COUNT(ASSESSMENT_ID) FROM CA_ASSESSMENT_PLAN
	WHERE OBJECT_TYPE = ? AND OBJECT_ID = ?		
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_PLAN_BY_ID" description="SELECT_ASSESSMENT_PLAN_BY_ID"><![CDATA[
	SELECT 
		ASSESSMENT_ID, 
		OBJECT_TYPE,
		OBJECT_ID,	
		NAME,
		DESCRIPTION,
		RATING_SCHEME_ID,
		MULTIPLE_APPLY_ALLOWED,
		FEEDBACK_ENABLED,
		STATE,
		START_DATE,
		END_DATE,
		CREATION_DATE,
		MODIFIED_DATE
	FROM CA_ASSESSMENT_PLAN
	WHERE ASSESSMENT_ID = ?
	]]></sql-query>	
	
	<sql-query name="UPDATE_ASSESSMENT_PLAN" description="UPDATE_ASSESSMENT_PLAN"><![CDATA[
	UPDATE CA_ASSESSMENT_PLAN SET
		OBJECT_TYPE = ?,
		OBJECT_ID = ?,
		NAME = ?,
		DESCRIPTION = ? ,
		RATING_SCHEME_ID = ?,
		MULTIPLE_APPLY_ALLOWED = ?,
		FEEDBACK_ENABLED = ?,
		STATE = ?,
		START_DATE = ?,
		END_DATE = ?,
		MODIFIED_DATE = ?
	WHERE ASSESSMENT_ID =?	
	]]></sql-query>	
	
	<sql-query name="INSERT_ASSESSMENT_PLAN" description="INSERT_ASSESSMENT_PLAN"><![CDATA[
	INSERT INTO CA_ASSESSMENT_PLAN (
		ASSESSMENT_ID,
		OBJECT_TYPE,
		OBJECT_ID,
		NAME,
		DESCRIPTION,
		RATING_SCHEME_ID,
		MULTIPLE_APPLY_ALLOWED,
		FEEDBACK_ENABLED,
		STATE,
		START_DATE,
		END_DATE,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)		
	]]></sql-query>	
		
	<sql-query name="SELECT_ASSESSMENT_PLAN_IDS_BY_USER" description="SELECT_ASSESSMENT_PLAN_IDS_BY_USER"><![CDATA[			
	SELECT
        DISTINCT T2.ASSESSMENT_ID
	FROM CA_ASSESSMENT_SUBJECT T1, CA_ASSESSMENT_PLAN T2
	WHERE
        T1.OBJECT_TYPE = 70 AND
		T1.OBJECT_ID = T2.ASSESSMENT_ID AND 		
	]]><dynamic><![CDATA[
		<#if state??>
		T2.STATE = '${state}' AND 
		</#if>	
	 	( 
		( SUBJECT_OBJECT_TYPE = 1 AND SUBJECT_OBJECT_ID = ${ user.companyId } )
		OR
		( SUBJECT_OBJECT_TYPE = 2 AND SUBJECT_OBJECT_ID = ${ user.userId } )
	)	
	]]></dynamic></sql-query>	
	
	<!-- ASSESSMENT -->
	<sql-query name="INSERT_ASSESSMENT" description="INSERT_ASSESSMENT"><![CDATA[
	INSERT INTO CA_ASSESSMENT (
		ASSESSMENT_ID,
		ASSESSMENT_PLAN_ID,
		FEEDBACK_ENABLED, 		
		CANDIDATE_ID,
		JOB_ID,
		JOB_LEVEL,
		STATE,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?,?)		
	]]></sql-query>		
	
	<sql-query name="UPDATE_ASSESSMENT" description="UPDATE_ASSESSMENT"><![CDATA[
	UPDATE CA_ASSESSMENT SET 
		STATE = ? ,
		MODIFIED_DATE = ?
	WHERE 
	 	ASSESSMENT_ID = ?		
	]]></sql-query>	

	<sql-query name="UPDATE_ASSESSMENT_RESULT" description="UPDATE_ASSESSMENT_RESULT"><![CDATA[
	UPDATE CA_ASSESSMENT SET 
		STATE = ? ,
		TOTAL_SCORE = ?,
		MODIFIED_DATE = ?
	WHERE 
	 	ASSESSMENT_ID = ?		
	]]></sql-query>	
		
	<sql-query name="SELECT_ASSESSMENT_BY_ID" description="SELECT_ASSESSMENT_BY_ID"><![CDATA[
	SELECT 
		ASSESSMENT_ID,
		ASSESSMENT_PLAN_ID,
		FEEDBACK_ENABLED, 		
		CANDIDATE_ID,
		JOB_ID,
		JOB_LEVEL,
		STATE,
		TOTAL_SCORE,
		CREATION_DATE,
		MODIFIED_DATE	
	FROM CA_ASSESSMENT
	WHERE 
	 	ASSESSMENT_ID = ?		
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_IDS_BY_PLAN_AND_USER_AND_STATE" description="SELECT_ASSESSMENT_IDS_BY_PLAN_AND_USER_AND_STATE"><![CDATA[
	SELECT 	
		ASSESSMENT_ID
	FROM CA_ASSESSMENT
	WHERE CANDIDATE_ID = ? 
	]]><dynamic><![CDATA[	
		<#if (assessmentPlanId > 0) >
		AND ASSESSMENT_PLAN_ID = ${assessmentPlanId}	
		</#if>
		<#if state??>
		AND STATE = '${state}'  
		</#if>	
	]]></dynamic></sql-query>	
	
	<sql-query name="COUNT_ASSESSMENT_BY_PLAN_AND_USER_AND_STATE" description="COUNT_ASSESSMENT_BY_PLAN_AND_USER_AND_STATE"><![CDATA[
	SELECT 	
		COUNT(ASSESSMENT_ID)
	FROM CA_ASSESSMENT	
	WHERE CANDIDATE_ID = ? 
	]]><dynamic><![CDATA[	
		<#if (assessmentPlanId > 0) >
		AND ASSESSMENT_PLAN_ID = ${assessmentPlanId}	
		</#if>
		<#if state??>
		AND STATE = '${state}'  
		</#if>	
	]]></dynamic></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_PERFORMANCE_CRITERIA_BY_JOB" description="SELECT_ASSESSMENT_PERFORMANCE_CRITERIA_BY_JOB"><![CDATA[
	SELECT 
		T1.COMPETENCY_ID, 
		T1.NAME AS COMPETENCY_NAME,
		T3.ESSENTIAL_ELEMENT_ID, 
		T3.NAME AS ESSENTIAL_ELEMENT_NAME,
		T3.COMPETENCY_LEVEL, 
		T4.PERFORMANCE_CRITERIA_ID, 
		T4.DESCRIPTION AS EXAMPLE,
		T4.SORT_ORDER
	FROM 
		CA_COMPETENCY T1, 
		CA_JOB_COMPETENCY_REL T2, 
		CA_ESSENTIAL_ELEMENT T3, 
		CA_PERFORMANCE_CRITERIA T4
	WHERE
		T1.COMPETENCY_ID = T2.COMPETENCY_ID
		AND T2.JOB_ID = ?
		AND T1.COMPETENCY_LEVEL >= ?
		AND T1.COMPETENCY_ID = T3.COMPETENCY_ID
		AND T4.OBJECT_TYPE = 54
		AND T4.OBJECT_ID = T3.ESSENTIAL_ELEMENT_ID
	ORDER BY T3.COMPETENCY_ID , T3.ESSENTIAL_ELEMENT_ID , T4.PERFORMANCE_CRITERIA_ID , T4.SORT_ORDER	
	]]></sql-query>	
		
	
	<sql-query name="DELETE_ASSESSMENT_SCORE_BY_ASSESSOR" description="DELETE_ASSESSMENT_SCORE_BY_ASSESSOR"><![CDATA[
		DELETE FROM CA_ASSESSED_SCORE
		WHERE ASSESSMENT_ID = ? 
			AND CANDIDATE_ID = ?
			AND ASSESSOR_ID = ?
	]]></sql-query>	
		
	<sql-query name="INSERT_ASSESSMENT_SCORE" description="INSERT_ASSESSMENT_SCORE"><![CDATA[
	INSERT INTO CA_ASSESSED_SCORE (
		ASSESSMENT_ID,
		CANDIDATE_ID,
		ASSESSOR_ID, 		
		COMPETENCY_ID,
		ESSENTIAL_ELEMENT_ID,
		PERFORMANCE_CRITERIA_ID,
		SCORE,
		CREATION_DATE,
		MODIFIED_DATE
	) VALUES (?,?,?,?,?,?,?,?,?)		
	]]></sql-query>	

	<sql-query name="SELECT_ASSESSMENT_SUMMARY" description="SELECT_ASSESSMENT_SUMMARY"><![CDATA[
	SELECT
	    T1.ASSESSMENT_ID ,
	    T1.CANDIDATE_ID,
	    T1.ASSESSOR_ID,
	    T1.COMPETENCY_ID,
	    T2.NAME AS COMPETENCY_NAME,
	    T1.ESSENTIAL_ELEMENT_ID,
	    T3.NAME AS ESSENTIAL_ELEMENT_NAME,
	    SUM( T1.SCORE ) AS SUB_TOTAL,
	    COUNT( T1.PERFORMANCE_CRITERIA_ID ) AS SUB_COUNT
	FROM CA_ASSESSED_SCORE T1
	LEFT OUTER JOIN CA_COMPETENCY T2 ON T1.COMPETENCY_ID = T2.COMPETENCY_ID
	LEFT OUTER JOIN CA_ESSENTIAL_ELEMENT T3 ON T1.ESSENTIAL_ELEMENT_ID = T3.ESSENTIAL_ELEMENT_ID
	WHERE
	    T1.ASSESSMENT_ID = ?
	GROUP BY T1.ASSESSMENT_ID, T1.CANDIDATE_ID, T1.ASSESSOR_ID, T1.COMPETENCY_ID, T2.NAME , T1.ESSENTIAL_ELEMENT_ID , T3.NAME
	ORDER BY T1.COMPETENCY_ID, T1.ESSENTIAL_ELEMENT_ID
	]]></sql-query>	
	
	<sql-query name="SELECT_ASSESSMENT_OTHERS_AVG" description="SELECT_ASSESSMENT_OTHERS_AVG"><![CDATA[
	SELECT
		T2.COMPETENCY_ID,
		T2.ESSENTIAL_ELEMENT_ID,
		SUM( T2.SCORE ) AS SUB_TOTAL,
		COUNT( T2.PERFORMANCE_CRITERIA_ID ) AS SUB_COUNT
	FROM 
		CA_ASSESSMENT T1, CA_ASSESSED_SCORE T2
	WHERE
		T1.ASSESSMENT_PLAN_ID = ?
		AND T1.JOB_ID = ?
		AND T1.JOB_LEVEL = ? 
		AND T1.ASSESSMENT_ID = T2.ASSESSMENT_ID
	GROUP BY T2.COMPETENCY_ID, T2.ESSENTIAL_ELEMENT_ID
	ORDER BY T2.COMPETENCY_ID, T2.ESSENTIAL_ELEMENT_ID	
	
	]]></sql-query>	
	<row-mapper></row-mapper>	
						
</sqlset>